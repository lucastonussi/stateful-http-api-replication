apiVersion: apps/v1
kind: Deployment
metadata:
  name: hermes-followers
  labels:
    app: hermes-followers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hermes-followers
  template:
    metadata:
      labels:
        app: hermes-followers
    spec:
      containers:
        - name: kv
          image: lptonussi/public:http-log-server
          imagePullPolicy: Always
          # args: [
          #   "-l", "/tmp/throughput.log",
          #   "-b", "2048",
          #   "-v", "1024"
          # ]
          ports:
            - containerPort: 8001
          volumeMounts:
            - name: vol-http-server-logs
              mountPath: /tmp/logs
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            tcpSocket:
              port: 8001
        - name: hermes
          image: lptonussi/public:hermes
          imagePullPolicy: Always
          args: [
            "-j", "hermes-leader:9000"
          ]
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PROTOCOL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PROTOCOL_PORT
              value: "10000"
          ports:
            - name: server
              containerPort: 8000
            - name: join
              containerPort: 9000
            - name: protocol
              containerPort: 10000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            tcpSocket:
              port: 8000
      volumes:
        - name: vol-http-server-logs
          emptyDir: {}
      # nodeSelector:
      #   role: server
      defaultNodeSelector: type=user-node,region=east
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: name
      #               operator: In
      #               values: [ "hermes-leader", "hermes-follower" ]
      #         topologyKey: failure-domain.beta.kubernetes.io/zone
      affinity:
        # ⬇⬇⬇ This ensures pods will land on separate hosts
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions: [{ key: app, operator: In, values: [hello] }]
            topologyKey: "kubernetes.io/hostname"
